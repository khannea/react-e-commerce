{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/utils/ImageSlider.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/utils/FileUpload.js","components/views/UploadProductPage/UploadProductPage.js","components/theme.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useState","redirect","setRedirect","loading","setLoading","useEffect","console","log","isAuth","Error","error","catch","err","to","ImageSlider","images","Box","style","overflow","height","width","autoPlay","infiniteLoop","swipeable","useKeyboardArrows","showArrows","showStatus","emulateTouch","map","image","index","src","key","useStyles","makeStyles","cardContainer","justifyContent","productCard","LandingPage","classes","Products","setProducts","Skip","setSkip","Limit","PostSize","setPostSize","getProducts","skip","limit","variables","Axios","post","success","concat","products","postSize","alert","DisplayProducts","product","Grid","item","xs","sm","md","lg","xl","Card","className","CardActionArea","CardContent","container","direction","spacing","Typography","variant","fontWeight","price","country","m","justifyItems","alignItems","Button","size","onClick","withRouter","formErrorMessage","setFormErrorMessage","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","history","push","touched","errors","isSubmitting","handleChange","handleSubmit","Container","Paper","p","minWidth","TextField","fullWidth","id","label","placeholder","value","onChange","color","fontSize","border","padding","borderRadius","disabled","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","moment","unix","registerUser","errmsg","LeftMenu","alignContent","component","Link","userData","IconButton","status","window","localStorage","setItem","undefined","clear","NavBar","AppBar","position","Toolbar","justify","FileUpload","Images","setImages","display","onDrop","files","formData","FormData","append","header","refreshFunction","multiple","maxSize","getRootProps","getInputProps","overflowX","currentIndex","indexOf","newImages","splice","onDelete","alt","UploadProductPage","TitleValue","setTitleValue","DescriptionValue","setDescriptionValue","PriceValue","setPriceValue","CountryValue","setCountryValue","event","preventDefault","_id","writer","title","description","currentTarget","multiline","rows","InputProps","startAdornment","InputAdornment","select","defaultValue","SelectProps","native","theme","createMuiTheme","typography","button","textTransform","App","fallback","paddingTop","exact","path","Auth","LoginPage","Boolean","location","hostname","match","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a06f64a6.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER } from \"./types\";\r\nimport { USER_SERVER } from \"../components/Config.js\";\r\n\r\nexport function registerUser(dataToSubmit) {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/register`, dataToSubmit)\r\n    .then((response) => response.data);\r\n\r\n  return {\r\n    type: REGISTER_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function loginUser(dataToSubmit) {\r\n  const request = axios\r\n    .post(`${USER_SERVER}/login`, dataToSubmit)\r\n    .then((response) => response.data);\r\n\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function auth() {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/auth`)\r\n    .then((response) => response.data);\r\n  return {\r\n    type: AUTH_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  const request = axios\r\n    .get(`${USER_SERVER}/logout`)\r\n    .then((response) => response.data);\r\n\r\n  return {\r\n    type: LOGOUT_USER,\r\n    payload: request,\r\n  };\r\n}\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\n","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { auth } from \"../_actions/user_actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n  function AuthenticationCheck(props) {\r\n    let user = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n      dispatch(auth())\r\n        .then((response) => {\r\n          console.log(response);\r\n          if (response.payload.isAuth === true) {\r\n            setRedirect(false);\r\n            setLoading(false);\r\n          } else {\r\n            setRedirect(true);\r\n            setLoading(false);\r\n\r\n            const error = new Error(response.error);\r\n            throw error;\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setRedirect(true);\r\n          setLoading(false);\r\n        });\r\n    }, [setRedirect, setLoading]);\r\n\r\n    if (option) {\r\n      if (loading) {\r\n        return null;\r\n      }\r\n      if (redirect === true) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n    }\r\n    return <SpecificComponent {...props} user={user} />;\r\n  }\r\n  return AuthenticationCheck;\r\n}\r\n","import React from \"react\";\r\nimport { CardMedia, Box } from \"@material-ui/core\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nfunction ImageSlider({ images }) {\r\n  return (\r\n    <Box style={{ overflow: \"hidden\", height: \"200px\", width: \"100%\" }}>\r\n      <Carousel\r\n        autoPlay\r\n        infiniteLoop\r\n        swipeable\r\n        useKeyboardArrows\r\n        showArrows\r\n        showStatus={false}\r\n        emulateTouch\r\n      >\r\n        {images.map((image, index) => {\r\n          return (\r\n            <img\r\n              src={`http://localhost:5000/${image}`}\r\n              style={{ width: \"100%\" }}\r\n              key={image}\r\n            />\r\n          );\r\n        })}\r\n      </Carousel>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ImageSlider;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Typography, Box } from \"@material-ui/core\";\r\nimport { Card, CardContent, CardHeader, Grid } from \"@material-ui/core\";\r\nimport { CardActionArea, CardMedia } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport ImageSlider from \"../../utils/ImageSlider\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  cardContainer: {\r\n    justifyContent: \"center\",\r\n  },\r\n  productCard: {\r\n    height: \"380px\",\r\n  },\r\n}));\r\n\r\nfunction LandingPage() {\r\n  const classes = useStyles();\r\n\r\n  const [Products, setProducts] = useState([]);\r\n  const [Skip, setSkip] = useState(0);\r\n  const [Limit, setLimit] = useState(6);\r\n  const [PostSize, setPostSize] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      skip: Skip,\r\n      limit: Limit,\r\n    };\r\n    getProducts(variables);\r\n  }, []);\r\n\r\n  const getProducts = (variables) => {\r\n    Axios.post(\"/api/product/getProducts\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        setProducts(Products.concat(response.data.products));\r\n        setPostSize(response.data.postSize);\r\n      } else {\r\n        alert(\"Failed to get products informations\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onLoadMore = () => {\r\n    const variables = {\r\n      skip: Skip + Limit,\r\n      limit: Limit,\r\n    };\r\n    getProducts(variables);\r\n    setSkip(Skip + Limit);\r\n  };\r\n\r\n  const DisplayProducts = Products.map((product, index) => {\r\n    return (\r\n      <Grid item key={index} xs={12} sm={6} md={4} lg={3} xl={2}>\r\n        <Card className={classes.productCard}>\r\n          {/* <CardHeader\r\n              title={<Typography variant=\"h7\">{product.title}</Typography>}\r\n            /> */}\r\n          <ImageSlider images={product.images} />\r\n          <CardActionArea style={{ height: \"100%\" }}>\r\n            <CardContent style={{ height: \"100%\" }}>\r\n              <Grid container direction=\"column\" spacing={3}>\r\n                <Grid item>\r\n                  <Typography variant=\"h5\">\r\n                    <Box fontWeight={900}>{product.price}€</Box>\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"h6\">{product.country}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Box m={4} justifyItems=\"center\">\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={4}>\r\n        <Grid container item spacing={4} className={classes.cardContainer}>\r\n          {DisplayProducts}\r\n        </Grid>\r\n        {PostSize >= Limit && (\r\n          <div>\r\n            <Button variant=\"outlined\" size=\"large\" onClick={onLoadMore}>\r\n              More\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { Container, Paper, Typography } from \"@material-ui/core\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then((response) => {\r\n              if (response.payload.loginSuccess) {\r\n                //window.localStorage.setItem(\"userId\", response.payload.userId);\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage(\"Check out your Account or Password again\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              setFormErrorMessage(\"Check out your Account or Password again\");\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\");\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n\r\n          isSubmitting,\r\n          handleChange,\r\n\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <Container>\r\n            <Paper>\r\n              <Box p={10}>\r\n                <form style={{ minWidth: \"375px\" }} onSubmit={handleSubmit}>\r\n                  <Grid container direction=\"column\" spacing={3}>\r\n                    <Grid item>\r\n                      <Typography variant=\"h2\">Sign up</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        placeholder=\"Enter your Email.\"\r\n                        type=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        className={\r\n                          errors.email && touched.email\r\n                            ? \"text-input error\"\r\n                            : \"text-input\"\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {errors.email && touched.email && (\r\n                        <div className=\"input-feedback\">{errors.email}</div>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {formErrorMessage && (\r\n                        <label>\r\n                          <p\r\n                            style={{\r\n                              color: \"#ff0000bf\",\r\n                              fontSize: \"0.7rem\",\r\n                              border: \"1px solid\",\r\n                              padding: \"1rem\",\r\n                              borderRadius: \"10px\",\r\n                            }}\r\n                          >\r\n                            {formErrorMessage}\r\n                          </p>\r\n                        </label>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        id=\"password\"\r\n                        placeholder=\"Enter your password, at least 6 characters.\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        className={\r\n                          errors.password && touched.password\r\n                            ? \"text-input error\"\r\n                            : \"text-input\"\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {errors.password && touched.password && (\r\n                        <div className=\"input-feedback\">{errors.password}</div>\r\n                      )}\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        onClick={handleSubmit}\r\n                        color=\"primary\"\r\n                        disabled={isSubmitting}\r\n                      >\r\n                        Login\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </Box>\r\n            </Paper>\r\n          </Container>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Container, Paper, Typography } from \"@material-ui/core\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        lastName: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string().required(\"Name is required\"),\r\n        lastName: Yup.string().required(\"Last Name is required\"),\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Confirm Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <Container>\r\n            <Paper>\r\n              <Box p={10}>\r\n                <form style={{ minWidth: \"375px\" }} onSubmit={handleSubmit}>\r\n                  <Grid container direction=\"column\" spacing={3}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h2\">Sign up</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        id=\"name\"\r\n                        placeholder=\"Enter your name.\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        className={\r\n                          errors.name && touched.name\r\n                            ? \"text-input error\"\r\n                            : \"text-input\"\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {errors.name && touched.name && (\r\n                        <div className=\"input-feedback\">{errors.name}</div>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        id=\"lastName\"\r\n                        label=\"Lastame\"\r\n                        placeholder=\"Enter your Last Name.\"\r\n                        type=\"text\"\r\n                        value={values.lastName}\r\n                        onChange={handleChange}\r\n                        className={\r\n                          errors.lastName && touched.lastName\r\n                            ? \"text-input error\"\r\n                            : \"text-input\"\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {errors.lastName && touched.lastName && (\r\n                        <div className=\"input-feedback\">{errors.lastName}</div>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        placeholder=\"Enter your Email.\"\r\n                        type=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        className={\r\n                          errors.email && touched.email\r\n                            ? \"text-input error\"\r\n                            : \"text-input\"\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {errors.email && touched.email && (\r\n                        <div className=\"input-feedback\">{errors.email}</div>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        id=\"password\"\r\n                        placeholder=\"Enter your password, at least 6 characters.\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        className={\r\n                          errors.password && touched.password\r\n                            ? \"text-input error\"\r\n                            : \"text-input\"\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {errors.password && touched.password && (\r\n                        <div className=\"input-feedback\">{errors.password}</div>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        id=\"confirmPassword\"\r\n                        placeholder=\"Confirm your password.\"\r\n                        type=\"password\"\r\n                        value={values.confirmPassword}\r\n                        onChange={handleChange}\r\n                        label=\"Confirm password\"\r\n                        className={\r\n                          errors.confirmPassword && touched.confirmPassword\r\n                            ? \"text-input error\"\r\n                            : \"text-input\"\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {errors.confirmPassword && touched.confirmPassword && (\r\n                        <div className=\"input-feedback\">\r\n                          {errors.confirmPassword}\r\n                        </div>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        onClick={handleSubmit}\r\n                        color=\"primary\"\r\n                        disabled={isSubmitting}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </Box>\r\n            </Paper>\r\n          </Container>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Grid, Button } from \"@material-ui/core\";\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <>\r\n      <Grid\r\n        item\r\n        container\r\n        alignContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        direction=\"row\"\r\n        spacing={2}\r\n      >\r\n        <Grid item>\r\n          <Button component={Link} to=\"/\">\r\n            <Typography variant=\"h5\">Logo</Typography>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button component={Link} to=\"/home\">\r\n            <Typography variant=\"h5\">Home</Typography>\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LeftMenu;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { USER_SERVER } from \"../../../Config\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../../../../_actions/user_actions\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nfunction RightMenu(props) {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n      if (response.status === 200) {\r\n        dispatch(logoutUser()).then((response) => {\r\n          window.localStorage.setItem(\"userId\", undefined);\r\n          props.history.push(\"/login\");\r\n        });\r\n\r\n        localStorage.clear();\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert(\"Log Out Failed\");\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {user.userData && user.userData.isAuth && (\r\n        <>\r\n          <Grid\r\n            item\r\n            container\r\n            alignContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            direction=\"row\"\r\n            spacing={2}\r\n          >\r\n            <Grid item>\r\n              <IconButton component={Link} to=\"/product/upload\">\r\n                <PublishIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button onClick={logoutHandler}>\r\n                <Typography variant=\"h5\">Logout</Typography>\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n\r\n      {(!user.userData || !user.userData.isAuth) && (\r\n        <>\r\n          <Grid\r\n            item\r\n            container\r\n            alignContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            direction=\"row\"\r\n            spacing={2}\r\n          >\r\n            <Grid item>\r\n              <Button component={Link} to=\"/login\">\r\n                <Typography variant=\"h5\">Sign In</Typography>\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button component={Link} to=\"/register\">\r\n                <Typography variant=\"h5\">Sign Up</Typography>\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","import React from \"react\";\r\nimport LeftMenu from \"./Sections/LeftMenu\";\r\nimport RightMenu from \"./Sections/RightMenu\";\r\nimport { AppBar, Grid } from \"@material-ui/core\";\r\nimport { Toolbar } from \"@material-ui/core\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <Toolbar>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <LeftMenu />\r\n          </Grid>\r\n          <Grid item>\r\n            <RightMenu />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Axios from \"axios\";\r\n\r\nfunction FileUpload(props) {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const onDrop = (files) => {\r\n    let formData = new FormData();\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n    formData.append(\"file\", files[0]);\r\n    //save the Image we chose inside the Node Server\r\n    Axios.post(\"/api/product/uploadImage\", formData, config).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          setImages([...Images, response.data.image]);\r\n          props.refreshFunction([...Images, response.data.image]);\r\n        } else {\r\n          alert(\"Failed to save the Image in Server\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const onDelete = (image) => {\r\n    const currentIndex = Images.indexOf(image);\r\n\r\n    let newImages = [...Images];\r\n    newImages.splice(currentIndex, 1);\r\n\r\n    setImages(newImages);\r\n    props.refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      <Dropzone onDrop={onDrop} multiple={false} maxSize={800000000}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div\r\n            style={{\r\n              width: \"300px\",\r\n              height: \"240px\",\r\n              border: \"1px solid lightgray\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            {...getRootProps()}\r\n          >\r\n            {/* {console.log(\"getRootProps\", { ...getRootProps() })}\r\n            {console.log(\"getInputProps\", { ...getInputProps() })} */}\r\n            <input {...getInputProps()} />\r\n            <AddIcon />\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"300px\",\r\n          height: \"280px\",\r\n          overflowX: \"auto\",\r\n        }}\r\n      >\r\n        {Images.map((image, index) => (\r\n          <div key={index} onClick={() => onDelete(image)}>\r\n            <img\r\n              style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n              src={`http://localhost:5000/${image}`}\r\n              alt={`productImg-${index}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport FileUpload from \"../../utils/FileUpload\";\r\nimport Axios from \"axios\";\r\n\r\nfunction UploadProductPage(props) {\r\n  const [TitleValue, setTitleValue] = useState(\"\");\r\n  const [DescriptionValue, setDescriptionValue] = useState(\"\");\r\n  const [PriceValue, setPriceValue] = useState(\"\");\r\n  const [CountryValue, setCountryValue] = useState(\"France\");\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const onTitleChange = (event) => {\r\n    setTitleValue(event.currentTarget.value);\r\n  };\r\n\r\n  const onDescriptionChange = (event) => {\r\n    setDescriptionValue(event.currentTarget.value);\r\n  };\r\n\r\n  const onPriceChange = (event) => {\r\n    setPriceValue(event.currentTarget.value);\r\n  };\r\n\r\n  const onCountrysSelectChange = (event) => {\r\n    setCountryValue(event.currentTarget.value);\r\n  };\r\n\r\n  const updateImages = (newImages) => {\r\n    setImages(newImages);\r\n  };\r\n\r\n  //SUBMIT\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      !props.user.userData._id ||\r\n      !TitleValue ||\r\n      !DescriptionValue ||\r\n      !PriceValue ||\r\n      !Images ||\r\n      !CountryValue\r\n    ) {\r\n      alert(\"First complete all fields!\");\r\n    } else {\r\n      const variables = {\r\n        writer: props.user.userData._id,\r\n        title: TitleValue,\r\n        description: DescriptionValue,\r\n        price: PriceValue,\r\n        images: Images,\r\n        country: CountryValue,\r\n      };\r\n\r\n      Axios.post(\"/api/product/uploadProduct\", variables).then((response) => {\r\n        if (response.data.success) {\r\n          alert(\"Product successfullt uploaded\");\r\n        } else {\r\n          alert(\"Failed to upload product\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const countries = [\r\n    {\r\n      key: 1,\r\n      value: \"Allemagne\",\r\n    },\r\n    {\r\n      key: 2,\r\n      value: \"France\",\r\n    },\r\n    {\r\n      key: 3,\r\n      value: \"Espagne\",\r\n    },\r\n    {\r\n      key: 4,\r\n      value: \"Chine\",\r\n    },\r\n    {\r\n      key: 5,\r\n      value: \"Indonesie\",\r\n    },\r\n    {\r\n      key: 6,\r\n      value: \"Japon\",\r\n    },\r\n    {\r\n      key: 7,\r\n      value: \"Brésil\",\r\n    },\r\n    {\r\n      key: 8,\r\n      value: \"USA\",\r\n    },\r\n    {\r\n      key: 9,\r\n      value: \"Kenya\",\r\n    },\r\n    {\r\n      key: 10,\r\n      value: \"Canada\",\r\n    },\r\n    {\r\n      key: 11,\r\n      value: \"Finland\",\r\n    },\r\n    {\r\n      key: 12,\r\n      value: \"Madagascar\",\r\n    },\r\n    {\r\n      key: 13,\r\n      value: \"Iran\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container direction=\"column\" spacing={4}>\r\n          <Grid item>\r\n            <Typography variant=\"h2\">Upload product</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <FileUpload refreshFunction={updateImages} />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              label=\"Titre\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onTitleChange}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onDescriptionChange}\r\n              multiline\r\n              rows={2}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              label=\"Price\"\r\n              onChange={onPriceChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">€</InputAdornment>\r\n                ),\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"standard-select-currency-native\"\r\n              select\r\n              label=\"Pays\"\r\n              defaultValue=\"France\"\r\n              onChange={onCountrysSelectChange}\r\n              SelectProps={{\r\n                native: true,\r\n              }}\r\n            >\r\n              {countries.map((option) => (\r\n                <option key={option.key} value={option.value}>\r\n                  {option.value}\r\n                </option>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={onSubmit}\r\n            >\r\n              <Typography variant=\"h5\">Submit</Typography>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UploadProductPage;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    button: {\r\n      textTransform: \"none\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport UploadProductPage from \"./views/UploadProductPage/UploadProductPage\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport theme from \"./theme\";\r\n\r\n//null   Anyone Can go inside\r\n//true   only logged in user can go inside\r\n//false  logged in user can't go inside\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <NavBar />\r\n        <div style={{ paddingTop: \"69px\" }}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Auth(LandingPage, true)} />\r\n            <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n            <Route\r\n              exact\r\n              path=\"/register\"\r\n              component={Auth(RegisterPage, false)}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/product/upload\"\r\n              component={Auth(UploadProductPage, true)}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Suspense>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH_USER,\r\n  LOGOUT_USER,\r\n} from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return { ...state, register: action.payload };\r\n    case LOGIN_USER:\r\n      return { ...state, loginSucces: action.payload };\r\n    case AUTH_USER:\r\n      return { ...state, userData: action.payload };\r\n    case LOGOUT_USER:\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/ie9\";\r\nimport \"react-app-polyfill/stable\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from \"./_reducers\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport promiseMiddleware from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  promiseMiddleware,\r\n  ReduxThunk\r\n)(createStore);\r\n\r\nReactDOM.render(\r\n  <Provider\r\n    store={createStoreWithMiddleware(\r\n      Reducer,\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )}\r\n  >\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}